# Copyright (c) Meta Platforms, Inc. and its affiliates.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: Linux Build
on:
  push:
    branches:
      - main
    paths:
      - axiom/**
      - velox
      - CMakeLists.txt
      - .github/workflows/build_and_test.yml
      - Makefile
  pull_request:
    paths:
      - axiom/**
      - velox
      - CMakeLists.txt
      - .github/workflows/build_and_test.yml
      - Makefile
permissions:
  contents: read
concurrency:
  group: ${{ github.workflow }}-${{ github.repository }}-${{ github.head_ref || github.sha }}
  cancel-in-progress: true
jobs:
  build-axiom:
    strategy:
      fail-fast: false
      matrix:
        sanitizer: [none, address, undefined, thread]
    name: Build Axiom with ${{ matrix.sanitizer }} sanitizer
    runs-on: 16-core-ubuntu
    container:
      image: ghcr.io/facebookincubator/velox-dev:centos9
    env:
      CCACHE_DIR: ${{ github.workspace }}/ccache
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          persist-credentials: false

      # Configure Git to trust the repository directory
      - name: Configure Git Safe Directory
        run: |
          git config --global --add safe.directory "/__w/verax/verax"
          git config --global --add safe.directory "*"

      - name: Ensure Ccache Dir Exists
        working-directory: ${{ github.workspace }}
        run: |
          mkdir -p "$CCACHE_DIR"

      # Get ccache from stash
      - name: Get Ccache Stash
        uses: apache/infrastructure-actions/stash/restore@3354c1565d4b0e335b78a76aedd82153a9e144d4
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-ubuntu-debug-default-gcc

      - name: Debug Cache Restoration
        run: |
          echo "=== Cache Restoration Debug ==="
          if [ -d "$CCACHE_DIR" ]; then
            echo "Directory size: $(du -sh "$CCACHE_DIR" 2>/dev/null || echo 'Unable to determine size')"
            echo "Directory contents:"
            ls -la "$CCACHE_DIR" || echo "Directory is empty or inaccessible"
            echo "File count: $(find "$CCACHE_DIR" -type f 2>/dev/null | wc -l)"
          else
            echo "âœ— Ccache directory does not exist"
          fi
          echo "=== End Cache Restoration Debug ==="

      - name: Clear CCache Statistics
        run: |
          ccache -sz

      # Build Axiom Debug
      - name: Build Axiom Debug
        if: ${{ matrix.sanitizer == 'none' }}
        env:
          MAKEFLAGS: NUM_THREADS=8 MAX_HIGH_MEM_JOBS=4 MAX_LINK_JOBS=4
          CPU_TARGET: "avx"
          VELOX_DEPENDENCY_SOURCE: SYSTEM
          ICU_SOURCE: SYSTEM
        run: |
          make debug

      - name: Build Axiom Debug with ${{ matrix.sanitizer }} sanitizer
        if: ${{ matrix.sanitizer != 'none' }}
        env:
          MAKEFLAGS: NUM_THREADS=8 MAX_HIGH_MEM_JOBS=4 MAX_LINK_JOBS=4
          CPU_TARGET: "avx"
          VELOX_DEPENDENCY_SOURCE: BUNDLED
          ICU_SOURCE: BUNDLED
        run: |
          make debug-${{ matrix.sanitizer }}

      # Display ccache statistics after build
      - name: CCache Statistics After Build
        if: always() # Run even if build failed
        run: |
          ccache -vs

      # Save ccache for future runs
      - name: Save ccache
        uses: apache/infrastructure-actions/stash/save@3354c1565d4b0e335b78a76aedd82153a9e144d4
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-ubuntu-debug-default-gcc

      # Run Axiom tests
      - name: Run Debug Tests
        working-directory: _build/debug
        run: |
          ctest -j 8 --output-on-failure --no-tests=error
