numWorkers: 1
numDrivers: 1

Query Graph:

dt5: ps_partkey, value
  output:
    ps_partkey := dt1.ps_partkey
    value := dt1.value
  tables: dt1, dt13
  filter: gt(dt1.value, dt13.expr)
  orderBy: dt1.value DESC NULLS LAST

dt1: ps_partkey, value
  output:
    ps_partkey := t2.ps_partkey
    value := dt1.value
  tables: t2, t3, t4
  joins:
    t2 INNER t3 ON t2.ps_suppkey = t3.s_suppkey
    t3 INNER t4 ON t3.s_nationkey = t4.n_nationkey
  syntactic join order: 6, 18, 25
  aggregates: sum(multiply(t2.ps_supplycost, __cast(t2.ps_availqty))) AS value
  grouping keys: t2.ps_partkey

t2: ps_partkey, ps_suppkey, ps_availqty, ps_supplycost
  table: partsupp

t3: s_suppkey, s_nationkey
  table: supplier

t4: n_nationkey, n_name
  table: nation
  single-column filters: eq(t4.n_name, "GERMANY")

dt13: expr
  output:
    expr := multiply(dt13.sum, 0.0001)
  tables: t14, t15, t16
  joins:
    t14 INNER t15 ON t14.ps_suppkey = t15.s_suppkey
    t15 INNER t16 ON t15.s_nationkey = t16.n_nationkey
  syntactic join order: 51, 55, 58
  aggregates: sum(multiply(t14.ps_supplycost, __cast(t14.ps_availqty))) AS sum

t14: ps_suppkey, ps_availqty, ps_supplycost
  table: partsupp

t15: s_suppkey, s_nationkey
  table: supplier

t16: n_nationkey, n_name
  table: nation
  single-column filters: eq(t16.n_name, "GERMANY")


Optimized plan (oneline):

((partsupp INNER (supplier INNER nation)) INNER (partsupp INNER (supplier INNER nation)))

Optimized plan:

Project -> dt5.ps_partkey, dt5.value
    dt5.ps_partkey := dt1.ps_partkey
    dt5.value := dt1.value
  OrderBy -> dt1.ps_partkey, dt1.value, dt13.expr
    Filter -> dt1.ps_partkey, dt1.value, dt13.expr
        gt(dt1.value, dt13.expr)
      Join INNER Cross -> dt1.ps_partkey, dt1.value, dt13.expr
        Project (redundant) -> dt1.ps_partkey, dt1.value
            dt1.ps_partkey := t2.ps_partkey
            dt1.value := dt1.value
          Aggregation (t2.ps_partkey) -> t2.ps_partkey, dt1.value
              dt1.value := sum(dt1.__p33)
            Project -> t2.ps_partkey, dt1.__p33
                t2.ps_partkey := t2.ps_partkey
                dt1.__p33 := multiply(t2.ps_supplycost, __cast(t2.ps_availqty))
              Join INNER Hash -> t2.ps_partkey, t2.ps_availqty, t2.ps_supplycost
                  t2.ps_suppkey = t3.s_suppkey
                TableScan -> t2.ps_partkey, t2.ps_suppkey, t2.ps_availqty, t2.ps_supplycost
                  table: partsupp
                HashBuild -> t3.s_suppkey, t3.s_nationkey, t4.n_nationkey
                  Join INNER Hash -> t3.s_suppkey, t3.s_nationkey, t4.n_nationkey
                      t3.s_nationkey = t4.n_nationkey
                    TableScan -> t3.s_suppkey, t3.s_nationkey
                      table: supplier
                    HashBuild -> t4.n_nationkey
                      TableScan -> t4.n_nationkey
                        table: nation
                        single-column filters: eq(t4.n_name, "GERMANY")
        Project -> dt13.expr
            dt13.expr := multiply(dt13.sum, 0.0001)
          Aggregation -> dt13.sum
              dt13.sum := sum(dt13.__p65)
            Project -> dt13.__p65
                dt13.__p65 := multiply(t14.ps_supplycost, __cast(t14.ps_availqty))
              Join INNER Hash -> t14.ps_availqty, t14.ps_supplycost
                  t14.ps_suppkey = t15.s_suppkey
                TableScan -> t14.ps_suppkey, t14.ps_availqty, t14.ps_supplycost
                  table: partsupp
                HashBuild -> t15.s_suppkey, t15.s_nationkey, t16.n_nationkey
                  Join INNER Hash -> t15.s_suppkey, t15.s_nationkey, t16.n_nationkey
                      t15.s_nationkey = t16.n_nationkey
                    TableScan -> t15.s_suppkey, t15.s_nationkey
                      table: supplier
                    HashBuild -> t16.n_nationkey
                      TableScan -> t16.n_nationkey
                        table: nation
                        single-column filters: eq(t16.n_name, "GERMANY")


Executable Velox plan:

Fragment 0:  numWorkers=0:
-- Project[18][expressions: (ps_partkey:BIGINT, "ps_partkey"), (value:DOUBLE, "value")] -> ps_partkey:BIGINT, value:DOUBLE
  -- OrderBy[17][value DESC NULLS LAST] -> ps_partkey:BIGINT, value:DOUBLE, expr:DOUBLE
    -- Filter[0][expression: gt("value","expr")] -> ps_partkey:BIGINT, value:DOUBLE, expr:DOUBLE
      -- NestedLoopJoin[16][INNER] -> ps_partkey:BIGINT, value:DOUBLE, expr:DOUBLE
        -- Aggregation[7][SINGLE [ps_partkey] value := sum("dt1.__p33")] -> ps_partkey:BIGINT, value:DOUBLE
          -- Project[6][expressions: (ps_partkey:BIGINT, "ps_partkey"), (dt1.__p33:DOUBLE, multiply("ps_supplycost",cast("ps_availqty" as DOUBLE)))] -> ps_partkey:BIGINT, "dt1.__p33":DOUBLE
            -- HashJoin[5][INNER ps_suppkey=s_suppkey] -> ps_partkey:BIGINT, ps_availqty:INTEGER, ps_supplycost:DOUBLE
              -- TableScan[1][table: partsupp, data columns: ROW<ps_partkey:BIGINT,ps_suppkey:BIGINT,ps_availqty:INTEGER,ps_supplycost:DOUBLE,ps_comment:VARCHAR>] -> ps_partkey:BIGINT, ps_suppkey:BIGINT, ps_availqty:INTEGER, ps_supplycost:DOUBLE
              -- HashJoin[4][INNER s_nationkey=n_nationkey] -> s_suppkey:BIGINT, s_nationkey:BIGINT, n_nationkey:BIGINT
                -- TableScan[2][table: supplier, data columns: ROW<s_suppkey:BIGINT,s_name:VARCHAR,s_address:VARCHAR,s_nationkey:BIGINT,s_phone:VARCHAR,s_acctbal:DOUBLE,s_comment:VARCHAR>] -> s_suppkey:BIGINT, s_nationkey:BIGINT
                -- TableScan[3][table: nation, range filters: [(n_name, Filter(BytesValues, deterministic, null not allowed))], data columns: ROW<n_nationkey:BIGINT,n_name:VARCHAR,n_regionkey:BIGINT,n_comment:VARCHAR>] -> n_nationkey:BIGINT
        -- Project[15][expressions: (expr:DOUBLE, multiply("sum",0.0001))] -> expr:DOUBLE
          -- Aggregation[14][SINGLE sum := sum("dt13.__p65")] -> sum:DOUBLE
            -- Project[13][expressions: (dt13.__p65:DOUBLE, multiply("ps_supplycost_3",cast("ps_availqty_2" as DOUBLE)))] -> "dt13.__p65":DOUBLE
              -- HashJoin[12][INNER ps_suppkey_1=s_suppkey_5] -> ps_availqty_2:INTEGER, ps_supplycost_3:DOUBLE
                -- TableScan[8][table: partsupp, data columns: ROW<ps_partkey:BIGINT,ps_suppkey:BIGINT,ps_availqty:INTEGER,ps_supplycost:DOUBLE,ps_comment:VARCHAR>] -> ps_suppkey_1:BIGINT, ps_availqty_2:INTEGER, ps_supplycost_3:DOUBLE
                -- HashJoin[11][INNER s_nationkey_8=n_nationkey_12] -> s_suppkey_5:BIGINT, s_nationkey_8:BIGINT, n_nationkey_12:BIGINT
                  -- TableScan[9][table: supplier, data columns: ROW<s_suppkey:BIGINT,s_name:VARCHAR,s_address:VARCHAR,s_nationkey:BIGINT,s_phone:VARCHAR,s_acctbal:DOUBLE,s_comment:VARCHAR>] -> s_suppkey_5:BIGINT, s_nationkey_8:BIGINT
                  -- TableScan[10][table: nation, range filters: [(n_name, Filter(BytesValues, deterministic, null not allowed))], data columns: ROW<n_nationkey:BIGINT,n_name:VARCHAR,n_regionkey:BIGINT,n_comment:VARCHAR>] -> n_nationkey_12:BIGINT

___END___
