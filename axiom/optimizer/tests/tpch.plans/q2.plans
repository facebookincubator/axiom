numWorkers: 1
numDrivers: 1

Query Graph:

dt1: s_acctbal, s_name, n_name, p_partkey, p_mfgr, s_address, s_phone, s_comment
  output:
    s_acctbal := t3.s_acctbal
    s_name := t3.s_name
    n_name := t5.n_name
    p_partkey := t2.p_partkey
    p_mfgr := t2.p_mfgr
    s_address := t3.s_address
    s_phone := t3.s_phone
    s_comment := t3.s_comment
  tables: t2, t3, t4, t5, t6, dt7
  joins:
    t2 LEFT dt7 ON t2.p_partkey = dt7.__gk12
    t2 INNER t4 ON t2.p_partkey = t4.ps_partkey
    t3 INNER t4 ON t3.s_suppkey = t4.ps_suppkey
    t3 INNER t5 ON t3.s_nationkey = t5.n_nationkey
    t5 INNER t6 ON t5.n_regionkey = t6.r_regionkey
    t4 INNER dt7 ON t4.ps_supplycost = dt7.min
  syntactic join order: 10, 22, 35, 43, 50, 53
  orderBy: t3.s_acctbal DESC NULLS LAST, t5.n_name ASC NULLS LAST, t3.s_name ASC NULLS LAST, t2.p_partkey ASC NULLS LAST
  limit: 100

t2: p_partkey, p_mfgr, p_type, p_size
  table: part
  single-column filters: eq(__cast(t2.p_size), 15) and like(t2.p_type, "%BRASS")

t3: s_suppkey, s_name, s_address, s_nationkey, s_phone, s_acctbal, s_comment
  table: supplier

t4: ps_partkey, ps_suppkey, ps_supplycost
  table: partsupp

t5: n_nationkey, n_name, n_regionkey
  table: nation

t6: r_regionkey, r_name
  table: region
  single-column filters: eq(t6.r_name, "EUROPE")

dt7: __gk12, min
  output:
    __gk12 := t8.ps_partkey
    min := dt7.min
  tables: t8, t9, t10, t11
  joins:
    t8 INNER t9 ON t8.ps_suppkey = t9.s_suppkey
    t9 INNER t10 ON t9.s_nationkey = t10.n_nationkey
    t10 INNER t11 ON t10.n_regionkey = t11.r_regionkey
  syntactic join order: 54, 58, 61, 64
  aggregates: min(t8.ps_supplycost) AS min
  grouping keys: t8.ps_partkey

t8: ps_partkey, ps_suppkey, ps_supplycost
  table: partsupp

t9: s_suppkey, s_nationkey
  table: supplier

t10: n_nationkey, n_regionkey
  table: nation

t11: r_regionkey, r_name
  table: region
  single-column filters: eq(t11.r_name, "EUROPE")


Optimized plan (oneline):

((partsupp INNER (supplier INNER (nation INNER region))) RIGHT ((partsupp INNER part) INNER (supplier INNER (nation INNER region))))

Optimized plan:

Project -> dt1.s_acctbal, dt1.s_name, dt1.n_name, dt1.p_partkey, dt1.p_mfgr, dt1.s_address, dt1.s_phone, dt1.s_comment
    dt1.s_acctbal := t3.s_acctbal
    dt1.s_name := t3.s_name
    dt1.n_name := t5.n_name
    dt1.p_partkey := t2.p_partkey
    dt1.p_mfgr := t2.p_mfgr
    dt1.s_address := t3.s_address
    dt1.s_phone := t3.s_phone
    dt1.s_comment := t3.s_comment
  OrderBy -> t2.p_partkey, t2.p_mfgr, t3.s_name, t3.s_address, t3.s_phone, t3.s_acctbal, t3.s_comment, t5.n_name
    Join RIGHT Hash -> t2.p_partkey, t2.p_mfgr, t3.s_name, t3.s_address, t3.s_phone, t3.s_acctbal, t3.s_comment, t5.n_name
        dt7.__gk12 = t2.p_partkey
      Project -> dt7.__gk12
          dt7.__gk12 := t8.ps_partkey
        Aggregation (t8.ps_partkey) -> t8.ps_partkey, dt7.min
            dt7.min := min(t8.ps_supplycost)
          Join INNER Hash -> t8.ps_partkey, t8.ps_supplycost
              t8.ps_suppkey = t9.s_suppkey
            TableScan -> t8.ps_partkey, t8.ps_suppkey, t8.ps_supplycost
              table: partsupp
            HashBuild -> t9.s_suppkey, t9.s_nationkey, t10.n_nationkey, t10.n_regionkey, t11.r_regionkey
              Join INNER Hash -> t9.s_suppkey, t9.s_nationkey, t10.n_nationkey, t10.n_regionkey, t11.r_regionkey
                  t9.s_nationkey = t10.n_nationkey
                TableScan -> t9.s_suppkey, t9.s_nationkey
                  table: supplier
                HashBuild -> t10.n_nationkey, t10.n_regionkey, t11.r_regionkey
                  Join INNER Hash -> t10.n_nationkey, t10.n_regionkey, t11.r_regionkey
                      t10.n_regionkey = t11.r_regionkey
                    TableScan -> t10.n_nationkey, t10.n_regionkey
                      table: nation
                    HashBuild -> t11.r_regionkey
                      TableScan -> t11.r_regionkey
                        table: region
                        single-column filters: eq(t11.r_name, "EUROPE")
      HashBuild -> t2.p_partkey, t2.p_mfgr, t3.s_name, t3.s_address, t3.s_phone, t3.s_acctbal, t3.s_comment, t4.ps_supplycost, t5.n_name
        Join INNER Hash -> t2.p_partkey, t2.p_mfgr, t3.s_name, t3.s_address, t3.s_phone, t3.s_acctbal, t3.s_comment, t4.ps_supplycost, t5.n_name
            t4.ps_suppkey = t3.s_suppkey
          Join INNER Hash -> t2.p_partkey, t2.p_mfgr, t4.ps_suppkey, t4.ps_supplycost
              t4.ps_partkey = t2.p_partkey
            TableScan -> t4.ps_partkey, t4.ps_suppkey, t4.ps_supplycost
              table: partsupp
            HashBuild -> t2.p_partkey, t2.p_mfgr
              TableScan -> t2.p_partkey, t2.p_mfgr
                table: part
                single-column filters: eq(__cast(t2.p_size), 15) and like(t2.p_type, "%BRASS")
          HashBuild -> t3.s_suppkey, t3.s_name, t3.s_address, t3.s_nationkey, t3.s_phone, t3.s_acctbal, t3.s_comment, t5.n_nationkey, t5.n_name, t5.n_regionkey, t6.r_regionkey
            Join INNER Hash -> t3.s_suppkey, t3.s_name, t3.s_address, t3.s_nationkey, t3.s_phone, t3.s_acctbal, t3.s_comment, t5.n_nationkey, t5.n_name, t5.n_regionkey, t6.r_regionkey
                t3.s_nationkey = t5.n_nationkey
              TableScan -> t3.s_suppkey, t3.s_name, t3.s_address, t3.s_nationkey, t3.s_phone, t3.s_acctbal, t3.s_comment
                table: supplier
              HashBuild -> t5.n_nationkey, t5.n_name, t5.n_regionkey, t6.r_regionkey
                Join INNER Hash -> t5.n_nationkey, t5.n_name, t5.n_regionkey, t6.r_regionkey
                    t5.n_regionkey = t6.r_regionkey
                  TableScan -> t5.n_nationkey, t5.n_name, t5.n_regionkey
                    table: nation
                  HashBuild -> t6.r_regionkey
                    TableScan -> t6.r_regionkey
                      table: region
                      single-column filters: eq(t6.r_name, "EUROPE")


Executable Velox plan:

Fragment 0:  numWorkers=0:
-- Project[38][expressions: (s_acctbal:DOUBLE, "s_acctbal"), (s_name:VARCHAR, "s_name"), (n_name:VARCHAR, "n_name"), (p_partkey:BIGINT, "p_partkey"), (p_mfgr:VARCHAR, "p_mfgr"), (s_address:VARCHAR, "s_address"), (s_phone:VARCHAR, "s_phone"), (s_comment:VARCHAR, "s_comment")] -> s_acctbal:DOUBLE, s_name:VARCHAR, n_name:VARCHAR, p_partkey:BIGINT, p_mfgr:VARCHAR, s_address:VARCHAR, s_phone:VARCHAR, s_comment:VARCHAR
  -- TopN[37][100 s_acctbal DESC NULLS LAST, n_name ASC NULLS LAST, s_name ASC NULLS LAST, p_partkey ASC NULLS LAST] -> p_partkey:BIGINT, p_mfgr:VARCHAR, s_name:VARCHAR, s_address:VARCHAR, s_phone:VARCHAR, s_acctbal:DOUBLE, s_comment:VARCHAR, n_name:VARCHAR
    -- HashJoin[36][RIGHT dt7.__gk12=p_partkey] -> p_partkey:BIGINT, p_mfgr:VARCHAR, s_name:VARCHAR, s_address:VARCHAR, s_phone:VARCHAR, s_acctbal:DOUBLE, s_comment:VARCHAR, n_name:VARCHAR
      -- Project[26][expressions: (dt7.__gk12:BIGINT, "ps_partkey_0")] -> "dt7.__gk12":BIGINT
        -- Aggregation[25][SINGLE [ps_partkey_0] min := min("ps_supplycost_3")] -> ps_partkey_0:BIGINT, min:DOUBLE
          -- HashJoin[24][INNER ps_suppkey_1=s_suppkey_5] -> ps_partkey_0:BIGINT, ps_supplycost_3:DOUBLE
            -- TableScan[18][table: partsupp, data columns: ROW<ps_partkey:BIGINT,ps_suppkey:BIGINT,ps_availqty:INTEGER,ps_supplycost:DOUBLE,ps_comment:VARCHAR>] -> ps_partkey_0:BIGINT, ps_suppkey_1:BIGINT, ps_supplycost_3:DOUBLE
            -- HashJoin[23][INNER s_nationkey_8=n_nationkey_12] -> s_suppkey_5:BIGINT, s_nationkey_8:BIGINT, n_nationkey_12:BIGINT, n_regionkey_14:BIGINT, r_regionkey_16:BIGINT
              -- TableScan[19][table: supplier, data columns: ROW<s_suppkey:BIGINT,s_name:VARCHAR,s_address:VARCHAR,s_nationkey:BIGINT,s_phone:VARCHAR,s_acctbal:DOUBLE,s_comment:VARCHAR>] -> s_suppkey_5:BIGINT, s_nationkey_8:BIGINT
              -- HashJoin[22][INNER n_regionkey_14=r_regionkey_16] -> n_nationkey_12:BIGINT, n_regionkey_14:BIGINT, r_regionkey_16:BIGINT
                -- TableScan[20][table: nation, data columns: ROW<n_nationkey:BIGINT,n_name:VARCHAR,n_regionkey:BIGINT,n_comment:VARCHAR>] -> n_nationkey_12:BIGINT, n_regionkey_14:BIGINT
                -- TableScan[21][table: region, range filters: [(r_name, Filter(BytesValues, deterministic, null not allowed))], data columns: ROW<r_regionkey:BIGINT,r_name:VARCHAR,r_comment:VARCHAR>] -> r_regionkey_16:BIGINT
      -- HashJoin[35][INNER ps_suppkey=s_suppkey] -> p_partkey:BIGINT, p_mfgr:VARCHAR, s_name:VARCHAR, s_address:VARCHAR, s_phone:VARCHAR, s_acctbal:DOUBLE, s_comment:VARCHAR, ps_supplycost:DOUBLE, n_name:VARCHAR
        -- HashJoin[29][INNER ps_partkey=p_partkey] -> p_partkey:BIGINT, p_mfgr:VARCHAR, ps_suppkey:BIGINT, ps_supplycost:DOUBLE
          -- TableScan[27][table: partsupp, data columns: ROW<ps_partkey:BIGINT,ps_suppkey:BIGINT,ps_availqty:INTEGER,ps_supplycost:DOUBLE,ps_comment:VARCHAR>] -> ps_partkey:BIGINT, ps_suppkey:BIGINT, ps_supplycost:DOUBLE
          -- TableScan[28][table: part, remaining filter: (and(eq(cast("p_size" as BIGINT),15),like("p_type",%BRASS))), data columns: ROW<p_partkey:BIGINT,p_name:VARCHAR,p_mfgr:VARCHAR,p_brand:VARCHAR,p_type:VARCHAR,p_size:INTEGER,p_container:VARCHAR,p_retailprice:DOUBLE,p_comment:VARCHAR>] -> p_partkey:BIGINT, p_mfgr:VARCHAR
        -- HashJoin[34][INNER s_nationkey=n_nationkey] -> s_suppkey:BIGINT, s_name:VARCHAR, s_address:VARCHAR, s_nationkey:BIGINT, s_phone:VARCHAR, s_acctbal:DOUBLE, s_comment:VARCHAR, n_nationkey:BIGINT, n_name:VARCHAR, n_regionkey:BIGINT, r_regionkey:BIGINT
          -- TableScan[30][table: supplier, data columns: ROW<s_suppkey:BIGINT,s_name:VARCHAR,s_address:VARCHAR,s_nationkey:BIGINT,s_phone:VARCHAR,s_acctbal:DOUBLE,s_comment:VARCHAR>] -> s_suppkey:BIGINT, s_name:VARCHAR, s_address:VARCHAR, s_nationkey:BIGINT, s_phone:VARCHAR, s_acctbal:DOUBLE, s_comment:VARCHAR
          -- HashJoin[33][INNER n_regionkey=r_regionkey] -> n_nationkey:BIGINT, n_name:VARCHAR, n_regionkey:BIGINT, r_regionkey:BIGINT
            -- TableScan[31][table: nation, data columns: ROW<n_nationkey:BIGINT,n_name:VARCHAR,n_regionkey:BIGINT,n_comment:VARCHAR>] -> n_nationkey:BIGINT, n_name:VARCHAR, n_regionkey:BIGINT
            -- TableScan[32][table: region, range filters: [(r_name, Filter(BytesValues, deterministic, null not allowed))], data columns: ROW<r_regionkey:BIGINT,r_name:VARCHAR,r_comment:VARCHAR>] -> r_regionkey:BIGINT

___END___
