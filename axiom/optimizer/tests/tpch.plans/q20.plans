numWorkers: 1
numDrivers: 1

Query Graph:

dt1: s_name, s_address
  output:
    s_name := t2.s_name
    s_address := t2.s_address
  tables: t2, t3, dt4
  joins:
    t2 SEMI dt4 ON t2.s_suppkey = dt4.ps_suppkey
    t2 INNER t3 ON t2.s_nationkey = t3.n_nationkey
  syntactic join order: 8, 17, 20
  filter: dt1.__mark1
  orderBy: t2.s_name ASC NULLS LAST

t2: s_suppkey, s_name, s_address, s_nationkey
  table: supplier

t3: n_nationkey, n_name
  table: nation
  single-column filters: eq(t3.n_name, "CANADA")

dt4: ps_suppkey
  output:
    ps_suppkey := t5.ps_suppkey
  tables: t5, dt6, dt10
  joins:
    t5 LEFT dt6 ON t5.ps_partkey = dt6.__gk8 AND t5.ps_suppkey = dt6.__gk9
    t5 SEMI dt10 ON t5.ps_partkey = dt10.p_partkey
  syntactic join order: 26, 30, 77
  filter: dt4.__mark0 and lt(dt6.expr, __cast(t5.ps_availqty))

t5: ps_partkey, ps_suppkey, ps_availqty
  table: partsupp

dt6: __gk8, __gk9, expr
  output:
    __gk8 := t7.l_partkey
    __gk9 := t7.l_suppkey
    expr := multiply(dt6.sum, 0.5)
  tables: t7
  aggregates: sum(t7.l_quantity) AS sum
  grouping keys: t7.l_partkey, t7.l_suppkey

t7: l_partkey, l_suppkey, l_quantity, l_shipdate
  table: lineitem
  single-column filters: gte(t7.l_shipdate, "1994-01-01") and lt(__cast(t7.l_shipdate), "1995-01-01")

dt10: p_partkey
  output:
    p_partkey := t11.p_partkey
  tables: t11

t11: p_partkey, p_name
  table: part
  single-column filters: like(t11.p_name, "forest%")


Optimized plan (oneline):

(((partsupp LEFT SEMI (PROJECT) part) LEFT lineitem) RIGHT SEMI (PROJECT) (supplier INNER nation))

Optimized plan:

Project -> dt1.s_name, dt1.s_address
    dt1.s_name := t2.s_name
    dt1.s_address := t2.s_address
  OrderBy -> t2.s_name, t2.s_address, dt1.__mark1
    Filter -> t2.s_name, t2.s_address, dt1.__mark1
        dt1.__mark1
      Join RIGHT SEMI (PROJECT) Hash -> t2.s_name, t2.s_address, dt1.__mark1
          dt4.ps_suppkey = t2.s_suppkey
        Project -> dt4.ps_suppkey
            dt4.ps_suppkey := t5.ps_suppkey
          Filter -> t5.ps_suppkey, t5.ps_availqty, dt6.expr
              lt(dt6.expr, __cast(t5.ps_availqty))
            Join LEFT Hash -> t5.ps_suppkey, t5.ps_availqty, dt6.expr
                t5.ps_partkey = dt6.__gk8
                t5.ps_suppkey = dt6.__gk9
              Filter -> t5.ps_partkey, t5.ps_suppkey, t5.ps_availqty, dt4.__mark0
                  dt4.__mark0
                Join LEFT SEMI (PROJECT) Hash -> t5.ps_partkey, t5.ps_suppkey, t5.ps_availqty, dt4.__mark0
                    t5.ps_partkey = dt10.p_partkey
                  TableScan -> t5.ps_partkey, t5.ps_suppkey, t5.ps_availqty
                    table: partsupp
                  HashBuild -> dt10.p_partkey
                    Project (redundant) -> dt10.p_partkey
                        dt10.p_partkey := t11.p_partkey
                      TableScan -> t11.p_partkey
                        table: part
                        single-column filters: like(t11.p_name, "forest%")
              HashBuild -> dt6.__gk8, dt6.__gk9, dt6.expr
                Project -> dt6.__gk8, dt6.__gk9, dt6.expr
                    dt6.__gk8 := t7.l_partkey
                    dt6.__gk9 := t7.l_suppkey
                    dt6.expr := multiply(dt6.sum, 0.5)
                  Aggregation (t7.l_partkey, t7.l_suppkey) -> t7.l_partkey, t7.l_suppkey, dt6.sum
                      dt6.sum := sum(t7.l_quantity)
                    TableScan -> t7.l_partkey, t7.l_suppkey, t7.l_quantity
                      table: lineitem
                      single-column filters: gte(t7.l_shipdate, "1994-01-01") and lt(__cast(t7.l_shipdate), "1995-01-01")
        HashBuild -> t2.s_suppkey, t2.s_name, t2.s_address
          Join INNER Hash -> t2.s_suppkey, t2.s_name, t2.s_address
              t2.s_nationkey = t3.n_nationkey
            TableScan -> t2.s_suppkey, t2.s_name, t2.s_address, t2.s_nationkey
              table: supplier
            HashBuild -> t3.n_nationkey
              TableScan -> t3.n_nationkey
                table: nation
                single-column filters: eq(t3.n_name, "CANADA")


Executable Velox plan:

Fragment 0:  numWorkers=0:
-- Project[16][expressions: (s_name:VARCHAR, "s_name"), (s_address:VARCHAR, "s_address")] -> s_name:VARCHAR, s_address:VARCHAR
  -- OrderBy[15][s_name ASC NULLS LAST] -> s_name:VARCHAR, s_address:VARCHAR, "dt1.__mark1":BOOLEAN
    -- Filter[0][expression: "dt1.__mark1"] -> s_name:VARCHAR, s_address:VARCHAR, "dt1.__mark1":BOOLEAN
      -- HashJoin[14][RIGHT SEMI (PROJECT) ps_suppkey=s_suppkey] -> s_name:VARCHAR, s_address:VARCHAR, "dt1.__mark1":BOOLEAN
        -- Project[10][expressions: (ps_suppkey:BIGINT, "ps_suppkey")] -> ps_suppkey:BIGINT
          -- Filter[1][expression: lt("expr",cast("ps_availqty" as DOUBLE))] -> ps_suppkey:BIGINT, ps_availqty:INTEGER, expr:DOUBLE
            -- HashJoin[9][LEFT ps_partkey=dt6.__gk8 AND ps_suppkey=dt6.__gk9] -> ps_suppkey:BIGINT, ps_availqty:INTEGER, expr:DOUBLE
              -- Filter[2][expression: "dt4.__mark0"] -> ps_partkey:BIGINT, ps_suppkey:BIGINT, ps_availqty:INTEGER, "dt4.__mark0":BOOLEAN
                -- HashJoin[5][LEFT SEMI (PROJECT) ps_partkey=p_partkey] -> ps_partkey:BIGINT, ps_suppkey:BIGINT, ps_availqty:INTEGER, "dt4.__mark0":BOOLEAN
                  -- TableScan[3][table: partsupp, data columns: ROW<ps_partkey:BIGINT,ps_suppkey:BIGINT,ps_availqty:INTEGER,ps_supplycost:DOUBLE,ps_comment:VARCHAR>] -> ps_partkey:BIGINT, ps_suppkey:BIGINT, ps_availqty:INTEGER
                  -- TableScan[4][table: part, remaining filter: (like("p_name",forest%)), data columns: ROW<p_partkey:BIGINT,p_name:VARCHAR,p_mfgr:VARCHAR,p_brand:VARCHAR,p_type:VARCHAR,p_size:INTEGER,p_container:VARCHAR,p_retailprice:DOUBLE,p_comment:VARCHAR>] -> p_partkey:BIGINT
              -- Project[8][expressions: (dt6.__gk8:BIGINT, "l_partkey"), (dt6.__gk9:BIGINT, "l_suppkey"), (expr:DOUBLE, multiply("sum",0.5))] -> "dt6.__gk8":BIGINT, "dt6.__gk9":BIGINT, expr:DOUBLE
                -- Aggregation[7][SINGLE [l_partkey, l_suppkey] sum := sum("l_quantity")] -> l_partkey:BIGINT, l_suppkey:BIGINT, sum:DOUBLE
                  -- TableScan[6][table: lineitem, range filters: [(l_shipdate, BigintRange: [8766, 9223372036854775807] no nulls)], remaining filter: (lt(cast("l_shipdate" as DATE),1995-01-01)), data columns: ROW<l_orderkey:BIGINT,l_partkey:BIGINT,l_suppkey:BIGINT,l_linenumber:INTEGER,l_quantity:DOUBLE,l_extendedprice:DOUBLE,l_discount:DOUBLE,l_tax:DOUBLE,l_returnflag:VARCHAR,l_linestatus:VARCHAR,l_shipdate:DATE,l_commitdate:DATE,l_receiptdate:DATE,l_shipinstruct:VARCHAR,l_shipmode:VARCHAR,l_comment:VARCHAR>] -> l_partkey:BIGINT, l_suppkey:BIGINT, l_quantity:DOUBLE
        -- HashJoin[13][INNER s_nationkey=n_nationkey] -> s_suppkey:BIGINT, s_name:VARCHAR, s_address:VARCHAR
          -- TableScan[11][table: supplier, data columns: ROW<s_suppkey:BIGINT,s_name:VARCHAR,s_address:VARCHAR,s_nationkey:BIGINT,s_phone:VARCHAR,s_acctbal:DOUBLE,s_comment:VARCHAR>] -> s_suppkey:BIGINT, s_name:VARCHAR, s_address:VARCHAR, s_nationkey:BIGINT
          -- TableScan[12][table: nation, range filters: [(n_name, Filter(BytesValues, deterministic, null not allowed))], data columns: ROW<n_nationkey:BIGINT,n_name:VARCHAR,n_regionkey:BIGINT,n_comment:VARCHAR>] -> n_nationkey:BIGINT

___END___
