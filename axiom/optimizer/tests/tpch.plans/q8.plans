numWorkers: 1
numDrivers: 1

Query Graph:

dt1: o_year, mkt_share
  output:
    o_year := dt1.o_year
    mkt_share := divide(dt1.sum, dt1.sum_4)
  tables: t2, t3, t4, t5, t6, t7, t8, t9
  joins:
    t2 INNER t4 ON t2.p_partkey = t4.l_partkey
    t3 INNER t4 ON t3.s_suppkey = t4.l_suppkey
    t4 INNER t5 ON t4.l_orderkey = t5.o_orderkey
    t5 INNER t6 ON t5.o_custkey = t6.c_custkey
    t6 INNER t7 ON t6.c_nationkey = t7.n_nationkey
    t7 INNER t9 ON t7.n_regionkey = t9.r_regionkey
    t3 INNER t8 ON t3.s_nationkey = t8.n_nationkey
  syntactic join order: 10, 20, 39, 54, 66, 73, 76, 82
  aggregates: sum(__switch(eq(t8.n_name, "BRAZIL"), multiply(t4.l_extendedprice, minus(1, t4.l_discount)), 0)) AS sum, sum(multiply(t4.l_extendedprice, minus(1, t4.l_discount))) AS sum_4
  grouping keys: year(t5.o_orderdate)
  orderBy: dt1.o_year ASC NULLS LAST

t2: p_partkey, p_type
  table: part
  single-column filters: eq(t2.p_type, "ECONOMY ANODIZED STEEL")

t3: s_suppkey, s_nationkey
  table: supplier

t4: l_orderkey, l_partkey, l_suppkey, l_extendedprice, l_discount
  table: lineitem

t5: o_orderkey, o_custkey, o_orderdate
  table: orders
  single-column filters: between(t5.o_orderdate, "1995-01-01", "1996-12-31")

t6: c_custkey, c_nationkey
  table: customer

t7: n_nationkey, n_regionkey
  table: nation

t8: n_nationkey, n_name
  table: nation

t9: r_regionkey, r_name
  table: region
  single-column filters: eq(t9.r_name, "AMERICA")


Optimized plan (oneline):

((supplier INNER ((lineitem INNER part) INNER ((orders INNER customer) INNER (nation INNER region)))) INNER nation)

Optimized plan:

Project -> dt1.o_year, dt1.mkt_share
    dt1.o_year := dt1.o_year
    dt1.mkt_share := divide(dt1.sum, dt1.sum_4)
  OrderBy -> dt1.o_year, dt1.sum, dt1.sum_4
    Aggregation (dt1.__p103) -> dt1.o_year, dt1.sum, dt1.sum_4
        dt1.sum := sum(dt1.__p113)
        dt1.sum_4 := sum(dt1.__p108)
      Project -> dt1.__p103, dt1.__p113, dt1.__p108
          dt1.__p103 := year(t5.o_orderdate)
          dt1.__p113 := __switch(eq(t8.n_name, "BRAZIL"), multiply(t4.l_extendedprice, minus(1, t4.l_discount)), 0)
          dt1.__p108 := multiply(t4.l_extendedprice, minus(1, t4.l_discount))
        Join INNER Hash -> t4.l_extendedprice, t4.l_discount, t5.o_orderdate, t8.n_name
            t3.s_nationkey = t8.n_nationkey
          Join INNER Hash -> t3.s_nationkey, t4.l_extendedprice, t4.l_discount, t5.o_orderdate
              t3.s_suppkey = t4.l_suppkey
            TableScan -> t3.s_suppkey, t3.s_nationkey
              table: supplier
            HashBuild -> t2.p_partkey, t4.l_orderkey, t4.l_partkey, t4.l_suppkey, t4.l_extendedprice, t4.l_discount, t5.o_orderkey, t5.o_custkey, t5.o_orderdate, t6.c_custkey, t6.c_nationkey, t7.n_nationkey, t7.n_regionkey, t9.r_regionkey
              Join INNER Hash -> t2.p_partkey, t4.l_orderkey, t4.l_partkey, t4.l_suppkey, t4.l_extendedprice, t4.l_discount, t5.o_orderkey, t5.o_custkey, t5.o_orderdate, t6.c_custkey, t6.c_nationkey, t7.n_nationkey, t7.n_regionkey, t9.r_regionkey
                  t4.l_orderkey = t5.o_orderkey
                Join INNER Hash -> t2.p_partkey, t4.l_orderkey, t4.l_partkey, t4.l_suppkey, t4.l_extendedprice, t4.l_discount
                    t4.l_partkey = t2.p_partkey
                  TableScan -> t4.l_orderkey, t4.l_partkey, t4.l_suppkey, t4.l_extendedprice, t4.l_discount
                    table: lineitem
                  HashBuild -> t2.p_partkey
                    TableScan -> t2.p_partkey
                      table: part
                      single-column filters: eq(t2.p_type, "ECONOMY ANODIZED STEEL")
                HashBuild -> t5.o_orderkey, t5.o_custkey, t5.o_orderdate, t6.c_custkey, t6.c_nationkey, t7.n_nationkey, t7.n_regionkey, t9.r_regionkey
                  Join INNER Hash -> t5.o_orderkey, t5.o_custkey, t5.o_orderdate, t6.c_custkey, t6.c_nationkey, t7.n_nationkey, t7.n_regionkey, t9.r_regionkey
                      t6.c_nationkey = t7.n_nationkey
                    Join INNER Hash -> t5.o_orderkey, t5.o_custkey, t5.o_orderdate, t6.c_custkey, t6.c_nationkey
                        t5.o_custkey = t6.c_custkey
                      TableScan -> t5.o_orderkey, t5.o_custkey, t5.o_orderdate
                        table: orders
                        single-column filters: between(t5.o_orderdate, "1995-01-01", "1996-12-31")
                      HashBuild -> t6.c_custkey, t6.c_nationkey
                        TableScan -> t6.c_custkey, t6.c_nationkey
                          table: customer
                    HashBuild -> t7.n_nationkey, t7.n_regionkey, t9.r_regionkey
                      Join INNER Hash -> t7.n_nationkey, t7.n_regionkey, t9.r_regionkey
                          t7.n_regionkey = t9.r_regionkey
                        TableScan -> t7.n_nationkey, t7.n_regionkey
                          table: nation
                        HashBuild -> t9.r_regionkey
                          TableScan -> t9.r_regionkey
                            table: region
                            single-column filters: eq(t9.r_name, "AMERICA")
          HashBuild -> t8.n_nationkey, t8.n_name
            TableScan -> t8.n_nationkey, t8.n_name
              table: nation


Executable Velox plan:

Fragment 0:  numWorkers=0:
-- Project[24][expressions: (o_year:BIGINT, "o_year"), (mkt_share:DOUBLE, divide("sum","sum_4"))] -> o_year:BIGINT, mkt_share:DOUBLE
  -- OrderBy[23][o_year ASC NULLS LAST] -> o_year:BIGINT, sum:DOUBLE, sum_4:DOUBLE
    -- Aggregation[22][SINGLE [o_year] sum := sum("dt1.__p113"), sum_4 := sum("dt1.__p108")] -> o_year:BIGINT, sum:DOUBLE, sum_4:DOUBLE
      -- Project[21][expressions: (o_year:BIGINT, year("o_orderdate")), (dt1.__p113:DOUBLE, switch(eq("n_name_1",BRAZIL),multiply("l_extendedprice",minus(1,"l_discount")),0)), (dt1.__p108:DOUBLE, multiply("l_extendedprice",minus(1,"l_discount")))] -> o_year:BIGINT, "dt1.__p113":DOUBLE, "dt1.__p108":DOUBLE
        -- HashJoin[20][INNER s_nationkey=n_nationkey_0] -> l_extendedprice:DOUBLE, l_discount:DOUBLE, o_orderdate:DATE, n_name_1:VARCHAR
          -- HashJoin[18][INNER s_suppkey=l_suppkey] -> s_nationkey:BIGINT, l_extendedprice:DOUBLE, l_discount:DOUBLE, o_orderdate:DATE
            -- TableScan[6][table: supplier, data columns: ROW<s_suppkey:BIGINT,s_name:VARCHAR,s_address:VARCHAR,s_nationkey:BIGINT,s_phone:VARCHAR,s_acctbal:DOUBLE,s_comment:VARCHAR>] -> s_suppkey:BIGINT, s_nationkey:BIGINT
            -- HashJoin[17][INNER l_orderkey=o_orderkey] -> p_partkey:BIGINT, l_orderkey:BIGINT, l_partkey:BIGINT, l_suppkey:BIGINT, l_extendedprice:DOUBLE, l_discount:DOUBLE, o_orderkey:BIGINT, o_custkey:BIGINT, o_orderdate:DATE, c_custkey:BIGINT, c_nationkey:BIGINT, n_nationkey:BIGINT, n_regionkey:BIGINT, r_regionkey:BIGINT
              -- HashJoin[9][INNER l_partkey=p_partkey] -> p_partkey:BIGINT, l_orderkey:BIGINT, l_partkey:BIGINT, l_suppkey:BIGINT, l_extendedprice:DOUBLE, l_discount:DOUBLE
                -- TableScan[7][table: lineitem, data columns: ROW<l_orderkey:BIGINT,l_partkey:BIGINT,l_suppkey:BIGINT,l_linenumber:INTEGER,l_quantity:DOUBLE,l_extendedprice:DOUBLE,l_discount:DOUBLE,l_tax:DOUBLE,l_returnflag:VARCHAR,l_linestatus:VARCHAR,l_shipdate:DATE,l_commitdate:DATE,l_receiptdate:DATE,l_shipinstruct:VARCHAR,l_shipmode:VARCHAR,l_comment:VARCHAR>] -> l_orderkey:BIGINT, l_partkey:BIGINT, l_suppkey:BIGINT, l_extendedprice:DOUBLE, l_discount:DOUBLE
                -- TableScan[8][table: part, range filters: [(p_type, Filter(BytesValues, deterministic, null not allowed))], data columns: ROW<p_partkey:BIGINT,p_name:VARCHAR,p_mfgr:VARCHAR,p_brand:VARCHAR,p_type:VARCHAR,p_size:INTEGER,p_container:VARCHAR,p_retailprice:DOUBLE,p_comment:VARCHAR>] -> p_partkey:BIGINT
              -- HashJoin[16][INNER c_nationkey=n_nationkey] -> o_orderkey:BIGINT, o_custkey:BIGINT, o_orderdate:DATE, c_custkey:BIGINT, c_nationkey:BIGINT, n_nationkey:BIGINT, n_regionkey:BIGINT, r_regionkey:BIGINT
                -- HashJoin[12][INNER o_custkey=c_custkey] -> o_orderkey:BIGINT, o_custkey:BIGINT, o_orderdate:DATE, c_custkey:BIGINT, c_nationkey:BIGINT
                  -- TableScan[10][table: orders, range filters: [(o_orderdate, BigintRange: [9131, 9861] no nulls)], data columns: ROW<o_orderkey:BIGINT,o_custkey:BIGINT,o_orderstatus:VARCHAR,o_totalprice:DOUBLE,o_orderdate:DATE,o_orderpriority:VARCHAR,o_clerk:VARCHAR,o_shippriority:INTEGER,o_comment:VARCHAR>] -> o_orderkey:BIGINT, o_custkey:BIGINT, o_orderdate:DATE
                  -- TableScan[11][table: customer, data columns: ROW<c_custkey:BIGINT,c_name:VARCHAR,c_address:VARCHAR,c_nationkey:BIGINT,c_phone:VARCHAR,c_acctbal:DOUBLE,c_mktsegment:VARCHAR,c_comment:VARCHAR>] -> c_custkey:BIGINT, c_nationkey:BIGINT
                -- HashJoin[15][INNER n_regionkey=r_regionkey] -> n_nationkey:BIGINT, n_regionkey:BIGINT, r_regionkey:BIGINT
                  -- TableScan[13][table: nation, data columns: ROW<n_nationkey:BIGINT,n_name:VARCHAR,n_regionkey:BIGINT,n_comment:VARCHAR>] -> n_nationkey:BIGINT, n_regionkey:BIGINT
                  -- TableScan[14][table: region, range filters: [(r_name, Filter(BytesValues, deterministic, null not allowed))], data columns: ROW<r_regionkey:BIGINT,r_name:VARCHAR,r_comment:VARCHAR>] -> r_regionkey:BIGINT
          -- TableScan[19][table: nation, data columns: ROW<n_nationkey:BIGINT,n_name:VARCHAR,n_regionkey:BIGINT,n_comment:VARCHAR>] -> n_nationkey_0:BIGINT, n_name_1:VARCHAR

___END___
