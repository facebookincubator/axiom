numWorkers: 1
numDrivers: 1

Query Graph:

dt1: nation, o_year, sum_profit
  output:
    nation := t7.n_name
    o_year := dt1.o_year
    sum_profit := dt1.sum_profit
  tables: t2, t3, t4, t5, t6, t7
  joins:
    t3 INNER t4 ON t3.s_suppkey = t4.l_suppkey
    t4 INNER t5 ON t4.l_suppkey = t5.ps_suppkey AND t4.l_partkey = t5.ps_partkey
    t2 INNER t4 ON t2.p_partkey = t4.l_partkey
    t4 INNER t6 ON t4.l_orderkey = t6.o_orderkey
    t3 INNER t7 ON t3.s_nationkey = t7.n_nationkey
    t3 INNER t5 ON t3.s_suppkey = t5.ps_suppkey
    t5 INNER t2 ON t5.ps_partkey = t2.p_partkey
  syntactic join order: 10, 20, 39, 51, 64, 71
  aggregates: sum(minus(multiply(t4.l_extendedprice, minus(1, t4.l_discount)), multiply(t4.l_quantity, t5.ps_supplycost))) AS sum_profit
  grouping keys: t7.n_name, year(t6.o_orderdate)
  orderBy: t7.n_name ASC NULLS LAST, dt1.o_year DESC NULLS LAST

t2: p_partkey, p_name
  table: part
  single-column filters: like(t2.p_name, "%green%")

t3: s_suppkey, s_nationkey
  table: supplier

t4: l_orderkey, l_partkey, l_suppkey, l_quantity, l_extendedprice, l_discount
  table: lineitem

t5: ps_partkey, ps_suppkey, ps_supplycost
  table: partsupp

t6: o_orderkey, o_orderdate
  table: orders

t7: n_nationkey, n_name
  table: nation


Optimized plan (oneline):

(((orders INNER (lineitem INNER (partsupp INNER part))) INNER supplier) INNER nation)

Optimized plan:

Project -> dt1.nation, dt1.o_year, dt1.sum_profit
    dt1.nation := t7.n_name
    dt1.o_year := dt1.o_year
    dt1.sum_profit := dt1.sum_profit
  OrderBy -> t7.n_name, dt1.o_year, dt1.sum_profit
    Aggregation (t7.n_name, dt1.__p82) -> t7.n_name, dt1.o_year, dt1.sum_profit
        dt1.sum_profit := sum(dt1.__p89)
      Project -> t7.n_name, dt1.__p82, dt1.__p89
          t7.n_name := t7.n_name
          dt1.__p82 := year(t6.o_orderdate)
          dt1.__p89 := minus(multiply(t4.l_extendedprice, minus(1, t4.l_discount)), multiply(t4.l_quantity, t5.ps_supplycost))
        Join INNER Hash -> t4.l_quantity, t4.l_extendedprice, t4.l_discount, t5.ps_supplycost, t6.o_orderdate, t7.n_name
            t3.s_nationkey = t7.n_nationkey
          Join INNER Hash -> t3.s_nationkey, t4.l_quantity, t4.l_extendedprice, t4.l_discount, t5.ps_supplycost, t6.o_orderdate
              t4.l_suppkey = t3.s_suppkey
            Join INNER Hash -> t4.l_suppkey, t4.l_quantity, t4.l_extendedprice, t4.l_discount, t5.ps_suppkey, t5.ps_supplycost, t6.o_orderdate
                t6.o_orderkey = t4.l_orderkey
              TableScan -> t6.o_orderkey, t6.o_orderdate
                table: orders
              HashBuild -> t2.p_partkey, t4.l_orderkey, t4.l_partkey, t4.l_suppkey, t4.l_quantity, t4.l_extendedprice, t4.l_discount, t5.ps_partkey, t5.ps_suppkey, t5.ps_supplycost
                Join INNER Hash -> t2.p_partkey, t4.l_orderkey, t4.l_partkey, t4.l_suppkey, t4.l_quantity, t4.l_extendedprice, t4.l_discount, t5.ps_partkey, t5.ps_suppkey, t5.ps_supplycost
                    t4.l_suppkey = t5.ps_suppkey
                    t4.l_partkey = t5.ps_partkey
                  TableScan -> t4.l_orderkey, t4.l_partkey, t4.l_suppkey, t4.l_quantity, t4.l_extendedprice, t4.l_discount
                    table: lineitem
                  HashBuild -> t2.p_partkey, t5.ps_partkey, t5.ps_suppkey, t5.ps_supplycost
                    Join INNER Hash -> t2.p_partkey, t5.ps_partkey, t5.ps_suppkey, t5.ps_supplycost
                        t5.ps_partkey = t2.p_partkey
                      TableScan -> t5.ps_partkey, t5.ps_suppkey, t5.ps_supplycost
                        table: partsupp
                      HashBuild -> t2.p_partkey
                        TableScan -> t2.p_partkey
                          table: part
                          single-column filters: like(t2.p_name, "%green%")
            HashBuild -> t3.s_suppkey, t3.s_nationkey
              TableScan -> t3.s_suppkey, t3.s_nationkey
                table: supplier
          HashBuild -> t7.n_nationkey, t7.n_name
            TableScan -> t7.n_nationkey, t7.n_name
              table: nation


Executable Velox plan:

Fragment 0:  numWorkers=0:
-- Project[26][expressions: (nation:VARCHAR, "n_name"), (o_year:BIGINT, "o_year"), (sum_profit:DOUBLE, "sum_profit")] -> nation:VARCHAR, o_year:BIGINT, sum_profit:DOUBLE
  -- OrderBy[25][n_name ASC NULLS LAST, o_year DESC NULLS LAST] -> n_name:VARCHAR, o_year:BIGINT, sum_profit:DOUBLE
    -- Aggregation[24][SINGLE [n_name, o_year] sum_profit := sum("dt1.__p89")] -> n_name:VARCHAR, o_year:BIGINT, sum_profit:DOUBLE
      -- Project[23][expressions: (n_name:VARCHAR, "n_name"), (o_year:BIGINT, year("o_orderdate")), (dt1.__p89:DOUBLE, minus(multiply("l_extendedprice",minus(1,"l_discount")),multiply("l_quantity","ps_supplycost")))] -> n_name:VARCHAR, o_year:BIGINT, "dt1.__p89":DOUBLE
        -- HashJoin[22][INNER s_nationkey=n_nationkey] -> l_quantity:DOUBLE, l_extendedprice:DOUBLE, l_discount:DOUBLE, ps_supplycost:DOUBLE, o_orderdate:DATE, n_name:VARCHAR
          -- HashJoin[20][INNER l_suppkey=s_suppkey] -> s_nationkey:BIGINT, l_quantity:DOUBLE, l_extendedprice:DOUBLE, l_discount:DOUBLE, ps_supplycost:DOUBLE, o_orderdate:DATE
            -- HashJoin[18][INNER o_orderkey=l_orderkey] -> l_suppkey:BIGINT, l_quantity:DOUBLE, l_extendedprice:DOUBLE, l_discount:DOUBLE, ps_suppkey:BIGINT, ps_supplycost:DOUBLE, o_orderdate:DATE
              -- TableScan[12][table: orders, data columns: ROW<o_orderkey:BIGINT,o_custkey:BIGINT,o_orderstatus:VARCHAR,o_totalprice:DOUBLE,o_orderdate:DATE,o_orderpriority:VARCHAR,o_clerk:VARCHAR,o_shippriority:INTEGER,o_comment:VARCHAR>] -> o_orderkey:BIGINT, o_orderdate:DATE
              -- HashJoin[17][INNER l_suppkey=ps_suppkey AND l_partkey=ps_partkey] -> p_partkey:BIGINT, l_orderkey:BIGINT, l_partkey:BIGINT, l_suppkey:BIGINT, l_quantity:DOUBLE, l_extendedprice:DOUBLE, l_discount:DOUBLE, ps_partkey:BIGINT, ps_suppkey:BIGINT, ps_supplycost:DOUBLE
                -- TableScan[13][table: lineitem, data columns: ROW<l_orderkey:BIGINT,l_partkey:BIGINT,l_suppkey:BIGINT,l_linenumber:INTEGER,l_quantity:DOUBLE,l_extendedprice:DOUBLE,l_discount:DOUBLE,l_tax:DOUBLE,l_returnflag:VARCHAR,l_linestatus:VARCHAR,l_shipdate:DATE,l_commitdate:DATE,l_receiptdate:DATE,l_shipinstruct:VARCHAR,l_shipmode:VARCHAR,l_comment:VARCHAR>] -> l_orderkey:BIGINT, l_partkey:BIGINT, l_suppkey:BIGINT, l_quantity:DOUBLE, l_extendedprice:DOUBLE, l_discount:DOUBLE
                -- HashJoin[16][INNER ps_partkey=p_partkey] -> p_partkey:BIGINT, ps_partkey:BIGINT, ps_suppkey:BIGINT, ps_supplycost:DOUBLE
                  -- TableScan[14][table: partsupp, data columns: ROW<ps_partkey:BIGINT,ps_suppkey:BIGINT,ps_availqty:INTEGER,ps_supplycost:DOUBLE,ps_comment:VARCHAR>] -> ps_partkey:BIGINT, ps_suppkey:BIGINT, ps_supplycost:DOUBLE
                  -- TableScan[15][table: part, remaining filter: (like("p_name",%green%)), data columns: ROW<p_partkey:BIGINT,p_name:VARCHAR,p_mfgr:VARCHAR,p_brand:VARCHAR,p_type:VARCHAR,p_size:INTEGER,p_container:VARCHAR,p_retailprice:DOUBLE,p_comment:VARCHAR>] -> p_partkey:BIGINT
            -- TableScan[19][table: supplier, data columns: ROW<s_suppkey:BIGINT,s_name:VARCHAR,s_address:VARCHAR,s_nationkey:BIGINT,s_phone:VARCHAR,s_acctbal:DOUBLE,s_comment:VARCHAR>] -> s_suppkey:BIGINT, s_nationkey:BIGINT
          -- TableScan[21][table: nation, data columns: ROW<n_nationkey:BIGINT,n_name:VARCHAR,n_regionkey:BIGINT,n_comment:VARCHAR>] -> n_nationkey:BIGINT, n_name:VARCHAR

___END___
